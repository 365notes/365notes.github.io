{
    "data": "[
    {
        "title": "Sophia Frances Harding.",
        "date": "2004-7-20",
        "content": "You are too curious for your own good. Did you really decode my hidden notes so you can read them early? I'm disappointed but also impressed. Do not read anything else here please!"
    },
    {
        "title": "New Year's Day",
        "date": "2025-1-1",
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;Happy New Year baby, I hope I got a big kiss from you at midnight! I'm very glad  that you are here to celebrate with me and my family. Even though we are a bunch of weirdos, you are always welcome here and everyone loves having you. I wish we could have some more alone time together, but there will always be time for that when we get back to Lincoln. It has been good to be home, but I'm so ready to get back to school with you. I think we're going to have a really great semester and then after we will get to spend the summer together. We can make money and spend lots of time at each other's places and get cutie dinners around Lincoln. I am very optimistic about this year and am so excited to spend it with my favorite girl in the whole world. I know that 2024 has been stressful, but we got through everything together and it will only get better from here. I love you so much honey <3. <br><br>-Joey"
    },
    {
        "title": "My Birthday!",
        "date": "2025-1-2",
        "content": "Hello, my darling. Today is the big day!! I am turning 20 whole years old. The time is flying by so fast. I definitely don't feel like I'm that old yet, but I'm excited to celebrate with you. You always make me so happy and give the best gifts and care so much about me. I have never cared thaaaat much about my birthday, but I really appreciate how special you make me feel. Even though you won't be in Wamego too much longer now, I am so glad you came to visit me. I love the little moments we get to be alone and snuggle like we always do. I hope you are having a relaxing break from being at home and school. We're halfway done with break, and will be back soon as 20 year olds. Love you baby. <br><br>-Joey"
    },
    {
        "title": "January 3rd",
        "date": "2025-1-3",
        "content": "Hi again, baby. Finally, all of the festivities are over for this year. It's been good to spend a bunch of time with family, but I think I'm ready to get a break from all the Christmas and birthday events for a while. It has been so good having you here this week. Tomorrow is your last day here, which makes me really sad. I love getting to relax and hang out with you and take care of you. But that also means I have been really nervous for you to get home safe with your car, especially with the bad weather coming in pretty soon. I want you to get back home and spend some more time with your mama, but I will still talk to you every single day. I hope you have been having a good trip down to Wamego. We will be back to school in no time, and I'm sure you will be back home with me many more times! You're my smart, cute, gorgeous girl and I'm glad to get one more day with you. I love you thiiiiiiiiiiiiis much. Muah! <br><br>-Joey"
    },
    {
        "title": "January 4th",
        "date": "2025-1-4",
        "content": "Hi there, sweetheart. Today you drive back home to Omaha :( It makes me sad that you have to leave, but I am also glad that you got to come, and now you can get home and see your mom and friends again. I hope you get home safe and sound. I will miss snuggling with you before bed and getting to wake you up first thing in the morning. I will also miss getting a kiss whenever I want and hanging out with you. I know that we will be back together in no time, though. I love you Sophia, and you make me so happy. 'How lucky am I to have something that makes saying goodbye so hard.' <br><br>-Joey"
    },
    {
        "title": "January 5th",
        "date": "2025-1-5",
        "content": "Hello, my dear. I miss you already. I have one million kisses waiting for you when I see you next. I love my adorable sleepy girl :) Love you always. <br><br>-Joey",
        "image": "note_images/5th.jpeg"
    },
    {
        "title": "January 6th",
        "date": "2025-1-6",
        "content": "Hi pumpkin. I misssssss you. Only a couple weeks until I will see you again, though. I miss your pretty smile and your hair and your eyes. I miss snuggling and taking naps together. I'm glad that you are getting to see your family and friends, and sleep in your own bed. I always just want you to be happy. I love you so much dear. Have a good day!<br><br>-Joey"
    },
    {
        "title": "January 7th",
        "date": "2025-1-7",
        "content": "Hello darling. I hope you're staying warm and cozy. It is so snowy here it's actually crazy. I think it's going to be about 11 days until I head back up to Linc city. That means I will see you soon! I know things are a little boring lately but I hope you can let yourself relax a little bit and get ready for the next semester. Have a great day lovey.<br><br>-Joey"
    },
    {
        "title": "January 8th",
        "date": "2025-1-8",
        "content": "Hi Baby! All the days are starting to blend together a little bit. I feel kinda bleugh and I hope you aren't getting too bored. I got my first Canvas notification recently. That makes me pretty horrified even though I'm excited to get back to school. I hope you know how proud of you I am every single day. You are the smartest girl I know and you're doing such a good job with school even though it's a lot sometimes. I'm so excited to graduate and be able to do whatever we want without all the stress of school and work and money and blah blah blah. I want a giant hug and kiss as soon as I see you. Love you sweetie. <br><br>-Joey"
    },
    {
        "title": "January 9th",
        "date": "2025-1-9",
        "content": "Hello sweetheart. You're my beautiful girl and I miss you so so much. All I want in the whole world is to hold you tight and kiss you and look at your face. It's barely more than one week left before I get to come visit you and that makes me so happy. I want you to spend the rest of break relaxing a little bit. It's ok to be bored and not doing anything for a little while longer. Have a good day, I love you babe.<br><br>-Joey"
    },
    {
        "title": "January 10th",
        "date": "2025-1-10",
        "content": "Guess what honey?? I get to come visit you in ONE WEEK. It feels like forever since I've seen you already. I'm so excited to get to come up to Omaha. And then after that we get to go back to school and we can hang out whenever we want. I hope you're not to stressed about anything. I want you to know that everything is going to turn out okay and I'm always here for you. Have a good day sweetie. See you soon!<br><br>-Joey"
    },
    {
        "title": "January 11th",
        "date": "2025-1-11",
        "content": "Why hello again my love. Everything is quite boring, isn't it? I feel like I don't have anything interesting to talk about at all. I am feeling plenty rested up and ready to get back to school. I want to spend lots and lots of time with you when we are back. I wouldn't rather do anything else in the whole world. I just want to lay down together and eat dinner together and we can play our game together and do anything you want. I'm counting down the days, honey. I love you. Big kiss, muah!<br><br>-Joey"
    },
    {
        "title": "January 12th",
        "date": "2025-1-12",
        "content": "Hi honey! Only a few days left until I come and see you. I know I keep saying that but I'm just so excited. You're my best friend and I just want to spend time with you. The best part of my day is when you ask me to play our little farm game and we can just relax and have fun together. You're my adorable little nerd :) Of course I am too but that's ok. I love you always sweetie.<br><br>-Joey"
    },
    {
        "title": "January 13th",
        "date": "2025-1-13",
        "content": "Hey baby. We are so so close to being back together. I know sometimes school stresses you out but I know that we will both be okay and we are going to have lots of fun together this semester. You're my beautiful perfect girl and I am going to give you the biggest kiss ever in just a few days. I think this picture is cutie. It's very us. I miss you a lot but I'll see you soon. Bye bye honey, I love you.<br><br>-Joey",
        "image": "note_images/farm.png"
    },
    {
        "title": "January 14th",
        "date": "2025-1-14",
        "content": "Hi darling. Ahhhhh! Just three or four more days!! I thought I was going to die from not seeing you enough, but now I get to see you soon. Did you know that you're the most beautiful girl in the world? I just miss looking at you and getting to hold you. You looked so good in the dresses you ordered and I want you to be happy about them and confident because you're stunning sweetie. I can NOT wait to see you. Love you baby.<br><br>-Joey"
    },
    {
        "title": "January 15th",
        "date": "2025-1-15",
        "content": "Hi hon. I have kind of been rotting away over break but it's sooooo close to being over. I know we're not exactly sure when we are going to see each other but I cannot wait to see you. I know that you are stressed out about some things right now and so am I, but I know that we are going to get through everything together. I love you lots baby, and see you soon <3 <br><br>-Joey"
    },
    {
        "title": "January 16th",
        "date": "2025-1-16",
        "content": "I love you even when we are arguing. I want you to be happy and I'll see you soon.<br><br>-Joey"
    },
    {
        "title": "January 17th",
        "date": "2025-1-17",
        "content": "AHHH!!! Today is the day!! I'm so excited to come see you, honey. I am only a little bit stressed about the drive, but I will be ok. I Love you so much and am glad that break is finally over. See you later baby!<br><br>-Joey"
    },
    {
        "title": "January 18th",
        "date": "2025-1-18",
        "content": "Hi, my love :) I had such a good day with you yesterday. I'm so glad I got to come see you before school starts up. I hope packing and everything goes well for you, I wish I could be there to help more. I love you so so much and look forward to more alone time, dinner dates, and time with you. I love you sooooo much sweetie, I hope you have a good day for me.<br><br>-Joey"
    },
    {
        "title": "January 19th",
        "date": "2025-1-19",
        "content": "Hi honey. Today you are coming down to Lincoln for good and that makes me happy. I think that we are both going to have our hands full this semester, but I still want to see you every day. I can't wait for more sleepovers and study times and little dates with you. I am always here for you for whatever you need because I love you so much. You can always tell me anything or ask for anything and I'll do my best to help you. I'll see you again soon!<br><br>-Joey"
    },
    {
        "title": "January 20th",
        "date": "2025-1-20",
        "content": "Hello baby. We are all moved in and I'm really glad that our cars are working and we're unpacked and everything is looking good right now. I hope that you feel good about being back too. We start classes tomorrow and I know that today we have some of our own things, but I can't wait to see you every day. You always brighten my day and you are so beautiful. I can't wait to see the pretty pretty pictures you take for Chi O! I love you sweetie. Muah!<br><br>-Joey"
    },
    {
        "title": "January 21st",
        "date": "2025-1-21",
        "content": "Today is the first day of school! You are my smart smart girl. I know that you are going to do so well in your classes this semester just like you always do. I want you to enjoy them a little even though some of them are dumb. I am always here to help you on some dumb computer stuff if you need me. Good luck today sweetheart, hopefully I will get to see you later! Big kiss.<br><br>-Joey"
    },
    {
        "title": "January 22nd",
        "date": "2025-1-22",
        "content": "Hi hon. Wow it has been so freezing out lately. I hope it warms up soon. But until then I will keep cuddling with you and warming you up whenever I can. I missed you so much and am so glad I get to see you whenever I want. I love you, and I hope you have a good day.<br><br>-Joey"
    },
    {
        "title": "January 23rd",
        "date": "2025-1-23",
        "content": "Hello sweetheart. I hope you are feeling a little better today. I know you're a little bit stressed out about some things but I am always here for you and I know that everything is going to be okay. Every semester so far has had its share of stressful parts and we have both done such a good job together and that's going to keep happening. I love you lots baby, I hope you have a good day. <3 <3 <3<br><br>-Joey"
    },
    {
        "title": "January 24th",
        "date": "2025-1-24",
        "content": "Hi lovey. I just wanted to let you know that you're my favorite girl in the whole world. You are beautiful and smart and kind. I love you lots. Have a great day at work and we will have some fun together tonight. Muah.<br><br>-Joey"
    },
    {
        "title": "January 25th",
        "date": "2025-1-25",
        "content": "Hi baby! It's finally the weekend. It has been quite a week already. I am pretty tired and bleugh, and I know that you are a little bit too. I hope we can just relax today and see each other and get some things done. There's nothing I like more than just hanging out with my girl. I'm sure I'll see you later. Love you baby.<br><br>-Joey"
    },
    {
        "title": "January 26th",
        "date": "2025-1-26",
        "content": "Happy Sunday dearest. January is almost over already. I know it has felt like a long first week but we will be done with the semester before we know it. I am proud of you and everything you are doing. I love getting to see you every day even if it's only for a little bit. I'll see you around baby. I love you.<br><br>-Joey"
    },
    {
        "title": "January 27th",
        "date": "2025-1-27",
        "content": "Hi babe. Today is a big day for both of us. We get to start our new exec positions. I know that its going to be scary, but everyone else is thinking the exact same thing, I promise. You are going to do such a good job and that's why everyone picked you. We are so power couple don't you think? I hope this week is a little easier for you. At least your leg will keep getting better and you are more settled into your classes. Always let me know if there is anything I can do for you at all honey. I love you lots and I'll see you soon. Muah.<br><br>-Joey"
    },
    {
        "title": "January 28th",
        "date": "2025-1-28",
        "content": "Hi darling. I'm glad that you had a good day yesterday. You did such a good job at your job and your chapter meeting. I think that you are going to do such a good job this semester. I'm always here for you honey! Have a good day for me. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "January 29th",
        "date": "2025-1-29",
        "content": "Hi sweet pea! We are both going to be really busy this week I think. That's okay with me as long as I get a few nights to relax with you and do nothing but eat sweet treats and snuggle for a while. I miss u even though it's only been a day since I saw you last. I love you so much and I'll see you soon. <3 <br><br>-Joey"
    },
    {
        "title": "January 30th",
        "date": "2025-1-30",
        "content": "Hello my love. It's been a busy couple days for both of us huh. I'm sorry that you haven't been feeling great. I hope you feel better soon. I think you just need a reall break day. I'm excited to go to Omaha with you and just help you relax. You're doing such a great job with all your responsibilities but that doesn't mean you cant take a break sometimes. I love you lots baby. Muah.<br><br>-Joey"
    },
    {
        "title": "January 31st",
        "date": "2025-1-31",
        "content": "Hey honey. I know that you have had a lot on your plate recently. And on top of that you don't feel very good. I am really sorry you are having a rough week, but it's going to get better. I think this weekend you will be able to rest up and I get to spend a bunch more time with you. We can go up to Omaha for the day and get some alone time. Hang in there baby, you are my strong smart beautiful girl. Love you.<br><br>-Joey"
    },
    {
        "title": "February 1st",
        "date": "2025-2-1",
        "content": "Happy month anniversary baby!! It's February already, can you believe it? I'm looking forward to spending the day with you and getting some Sophie time and some relaxation time for you. I think we will have a better week this week and you will feel better than you have been. I love you lots. Muaaaaaaaaah.<br><br>-Joey"
    },
    {
        "title": "February 2nd",
        "date": "2025-2-2",
        "content": "Hi honey. I really hope you feel better today. I know you have a lot of things to do but you have to take care of yourself first and only do things that are really important. Please take care of yourself sweetie. I am here for anything you need too. I have a busy day too but hopefully we can see each other for at least a little bit. I love you always. Muah.<br><br>-Joey"
    },
    {
        "title": "February 3rd",
        "date": "2025-2-3",
        "content": "Hi baby. I hope that you start to feel better today. I don't want you to get more sicky. It makes me sad when my girl doesn't feel good. Keep resting as much as you can and eat and drink up. Chapter meeting number two is coming up. I know you're going to keep doing a good job and I want you to like your new position, even though I know they threw a lot at you really quickly. You're doing such a good job with everything darling. I love and admire you. Have a good day. Muah.<br><br>-Joey"
    },
    {
        "title": "February 4th",
        "date": "2025-2-4",
        "content": "Happy Tuesday, Dear. I haven't gotten to see you too much these last couple of days. We are just so busy all the time. I'm always here for you when it is really important and I hope you know that. We are doing a great job of preparing for the grown up world so even though I wish I could see you more I think that staying busy will be worth it down the road. Keep up the good work honey, I'll see you soon. Love you.<br><br>-Joey"
    },
    {
        "title": "February 5th",
        "date": "2025-2-5",
        "content": "Hello my love. You are my favorite girl and my best friend. You will always have me no matter what. Please try to relax and just think ahead a little bit because everything is going to be okay, we just need to get through a little bit of hard stuff first. I love spending time with you and I hope I get to see you more soon. I love you.<br><br>-Joey"
    },
    {
        "title": "February 6th",
        "date": "2025-2-6",
        "content": "Hi schmoopy. I hope you think this week is going a little better than last week. Today I get to see you for a bunch and I'm so excited. We've been so busy I don't get to see my baby. We are going to get a bunch of work done, and you will be all ready for your trip. I'm going to miss you a bunch this weekend but it's important that you go and I think you will have fun. I love you lots sweet heart. See you soon! Muah.<br><br>-Joey"
    },
    {
        "title": "February 7th",
        "date": "2025-2-7",
        "content": "Hi honey. Big day today!!! Are you excited to go on your trip? I think it will be good for you to get away from everything for a weekend. Please don't worry about your plane ride. I promise you're going to be safe and sound. Just relax and try to have fun. You belong there with all the important Chi O's. I will miss you but I will see you real soon. When you're back we can watch our show and play our farm game and do whatever you want. I love you sweetie, safe travels. XOXOXO<br><br>-Joey"
    },
    {
        "title": "February 8th",
        "date": "2025-2-8",
        "content": "Hi baby. I'm so happy you made it to Philidelphia safe and sound and that you had a fun day. I hope you have another good day and then you can come back soon. I miss you and can't wait to see you again. I just have some random boring things going on but it should be a good weekend for me to get some things done. Anyways, good luck with all your important exec activities and I'll see you soon. Big kiss from Nebraska. Love you, honey.<br><br>-Joey"
    },
    {
        "title": "February 9th",
        "date": "2025-2-9",
        "content": "Hi sweetie pie. I'm sooooo happy you got to have a fun trip. Have a good day and safe travels home. I will come visit you real quick when you get home and then you can just rest up and get ready for the week. I think we will have a good week and I want lots of kisses and snuggles :) Love you dearest.<br><br>-Joey"
    },
    {
        "title": "February 10th",
        "date": "2025-2-10",
        "content": "Hi sweetheart. You are back in Lincoln! I am so so happy that you got to have a really fun weekend. I am glad that you are back, though. Hopefully, you got a good mental break and now you can rest and relax a little bit more. I can't wait to see you and snuggle and get a big kiss because I haven't seen you in a billion years. You are doing such a good job and everything is going to be alright. I love you, my beautiful girl. <3<br><br>-Joey"
    },
    {
        "title": "February 11th",
        "date": "2025-2-11",
        "content": "Hello dearest. I think you have been so sleepy since you got back from your trip! It sounds like you will have a little more time to relax this week, so that is really good. Sleep as much as you can sweetie, it will help you feel better. We always have something going on, don't we? I wish I would have had more time to see you. I just want to snuggle and lay in my bed with you. Oh well, hopefully we will get some alone time today or tomorrow. I love you sooo much baby. I always want the best for you. XOXO<br><br>-Joey"
    },
    {
        "title": "February 12th",
        "date": "2025-2-12",
        "content": "Snow day!!! Stay inside and warm today sweetie. I'm sorry you dont feel good. Please drink some water and take whatever medicine you need. I want you to feel better and you can always come to see me and let me take care of you. We can both get some work done today and stay home more. I love you lots dear.<br><br>-Joey"
    },
    {
        "title": "February 13th",
        "date": "2025-2-13",
        "content": "Hi baby. I'm really sorry you are feeling sicky. I hope you are feeling a little bit better today at least. Always tell me if you need something from me, ok? You are always my smart beautiful girl. Sadly it doesn't look like they canceled class for tomorrow, so stay warm when you're walking to class. Stay home if you really feel icky, you will be ok with classes. I love you, sweetie. Just focus on feeling better for me. Big kiss!<br><br>-Joey"
    },
    {
        "title": "February 14th",
        "date": "2025-2-14",
        "content": "Happy Valentine's Day!!!!!!!!!!! I am so lucky to have you as my Valentine Sophia Harding. You are my best friend, and I wouldn't rather spend today with anyone else. I know you have some work today, and I have classes, but it is still our day. I can't wait to see you later and just be together and do nothing else in the whole world. You are my favorite person to spend time with and talk to. You are my beautiful, gorgeous girl always. I am really sad that you have been feeling sick lately. I just want you to feel good and be happy. I wish I could cure you and make the weather beautiful and do all you stupid homework assignments for you but unfortunately, I can't. I know you will get through everything that's hard because you are so strong and I am here for you whenever you need it. Anyways, have a good day dearest. I can't wait to see you later. I love you a billion times, my valentine. XOXO<br><br>-Joey"
    },
    {
        "title": "February 15th",
        "date": "2025-2-15",
        "content": "Hi lovey. I'm sorry you're still feeling a little bad but I'm so glad that we got to see each other on Valentine's Day. I know we didn't get the perfect reservation but I'm still very excited to take you to a fun dinner tonight. You deserve it for all your hard work lately, baby. I love you so much and I hope you have a good day before I get to see you. Muah!<br><br>-Joey"
    },
    {
        "title": "February 16th",
        "date": "2025-2-16",
        "content": "Hello darling. I had such a nice time with you last night. We are going to have so many more fun dinners, just the two of us. I hope that always gives you something to look forward too, because I do. I think it will be a busy day today but that's ok. You are starting to get better and that makes me happy. I will miss you this week but I know that we both have important things to do. I love you lots Sophia. Muah!<br><br>-Joey"
    },
    {
        "title": "February 17th",
        "date": "2025-2-17",
        "content": "Hi sweet pea. I am so so happy you are feeling better now. Even though you have to give a dumb tour in the cold I think you will have a much less stressful week without being all sicky. I know you and Claire have to make a tough decision soon, but please try to not let it upset you. You are doing your job and protecting everyone and I know that everyone appreciates that. I hope you can take the next couple days to focus up on homework and get everything back on schedule. I have quite a bit to do between spanish, ceramics, and other stuff, so we might not have a ton of time to see each other this week, but I will always find time to come see you. Have a good day for me. Love you!!<br><br>-Joey"
    },
    {
        "title": "February 18th",
        "date": "2025-2-18",
        "content": "Hello darling. I can't believe how gross the weather is this week. It's toooo cold for my baby. I just want it to be warm again. I know you have a lot going on right now but I still get to see you today. You are doing such a good job with everything sweetie. Once you get your sickness and the crazy personal problems and your ODK meetings out of the way, you will have more time to relax. I'm always here for you my dear. I love you lots. Muah!<br><br>-Joey"
    },
    {
        "title": "February 19th",
        "date": "2025-2-19",
        "content": "Hi honey. I'm really sorry about Dave. It's ok for you to be sad and to miss dumb things that you do not want to go to if you need to. I'm always here for you and it is going to be ok. I can't believe how cold it is still. Please stay inside as much as possible, I want my baby to stay warm. I love you lots, I hope I get to see you soon. <3<br><br>-Joey"
    },
    {
        "title": "February 20th",
        "date": "2025-2-20",
        "content": "Hey baby. The days are really flying by. It's already almost March! I'm sorry if you have been feeling a little blah. I am here for you no matter what. Pretty soon it will start to get warmer outside and it will be pretty outside and you will have less dumb stuff to deal with for your exec position. I can't believe how fast college is going but I love spending it with you. I love you dear. Muah.<br><br>-Joey"
    },
    {
        "title": "February 21st",
        "date": "2025-2-21",
        "content": "Hi honey. Happy Friday! Today, I get to spend a bunch of time with you. I never get enough time with you because we have so much going on. I think about you all the time and love when I finally see you. This stupid cold is almost gone after today! It is supposed to be 60 degrees next week. That's exciting and I'm glad you won't have to walk in the cold so much. I love you lots Sophia. Muah.<br><br>-Joey"
    },
    {
        "title": "February 22nd",
        "date": "2025-2-22",
        "content": "Hi dearest. It's finally not so chilly outside. Hopefully this weather sticks around and its not so gross outside for the rest of the semester. I know you are going to do a good job today and I hope that the situation does not upset you because you havent done anything wrong and you are doing really necessary thinsg for Chi o. I'm happy that I will get to see you later if all goes well. I love you honey.<br><br>-Joey"
    },
    {
        "title": "February 23rd",
        "date": "2025-2-23",
        "content": "Hi sweetie. We got to have another sleepover, hehehe. I always love seeing you even though we don't always get to over the week. I know you're going to have a long week but I'm always here for you. Have a good day and I love you.<br><br>-Joey"
    },
    {
        "title": "February 24th",
        "date": "2025-2-24",
        "content": "Hello my love. I have been really busy these couple days and I wish I had more time to see you. There is really nothing I would rather do. You are so so important to me and I think about you every day. I hope that you have a good day and enjoy the pretty weather. I'm happy that you don't have to go out in the cold anymore. I love you lots dear, I'll see you soon. Muah.<br><br>-Joey"
    },
    {
        "title": "February 25th",
        "date": "2025-2-25",
        "content": "Hi deary. I think we will both have busy days today. I'm excited to see you later and I hope that I can help you with whatever you need. Please enjoy the beautiful weather and have a good day for me, even though you're busy. I love you so much and you're doing such a good job. Muah.<br><br>-Joey"
    },
    {
        "title": "February 26th",
        "date": "2025-2-26",
        "content": "Hi honey. I'm sorry that you are so busy right now. There is so much going on but I want you to know that it's all going to be ok. Everything you do is extra, and it's always ok to slow down a little bit. Please drive safe on your way to Omaha. Don't worry about school for a day and see your family. I will be here waiting for you to come back and hopefully we can spend some more time together. I love you always and am so glad you're here with me. Muah.<br><br>-Joey"
    },
    {
        "title": "February 27th",
        "date": "2025-2-27",
        "content": "Hi dear. I know it might be a tough day for you. Just know that I love you and I'm always here for you. I'll let you and your family be together today and then when you get back we can hang out. Hopefully with two new stuffed and punchable members of the family. I will see you soon and I hope that you are doing okay. Love you lots.<br><br>-Joey"
    },
    {
        "title": "February 28th",
        "date": "2025-2-28",
        "content": "Hey sweetie. I missed you while you were gone so I'm glad you're back. I'm excited to spend some time with you tonight. Even if it's not too long, we can hopefully have a sleepover :) I know that you have so many things going on right now. I'm here to help you and I just want to make things easier for you. Let me know if there's anything I can do for you. I love you lots baby. See you soon! XOXO<br><br>-Joey"
    },
    {
        "title": "March 1st",
        "date": "2025-3-1",
        "content": "Happy March, baby! I love getting to spend time with you. Especially when it's so nice outside. We both have plenty of things to do this weekend but we can still find time to see each other. I always need to see your pretty smile and hair and eyes. I hope you have a good day. Love you always!<br><br>-Joey"
    },
    {
        "title": "March 2nd",
        "date": "2025-3-2",
        "content": "Hi lovey dovey. I didn't get to see you much yesterday but I'm really glad you got some work done and got to hang out with lauren and have some fun. I'll see you later today I hope and we can just keep working on homework and whatever we have going on. I hope that you feel a little more on top of everything lately. I think that things are going well and I have been happy lately. Especially because I get to see you honey. I love you lots. Big big kiss - muah.<br><br>-Joey"
    },
    {
        "title": "March 3rd",
        "date": "2025-3-3",
        "content": "Hey honey. You have had so many things pile up this week. You are doing such a good job managing it all, and I am sure that next week things will slow down a little. It's a beautiful day outside and I hope that makes you happy. Mondays are always busy for us but maybe we will have time to see each other later today. I haven't gotten to hold you enough. I just want to lay down with you and cuddle for a while. I miss you and love you so much deary. Have a good day for me.<br><br>-Joey"
    },
    {
        "title": "March 4th",
        "date": "2025-3-4",
        "content": "Hi schmoopy. I really hope that you got some good sleep last night and you feel a little better. It makes me sad when you don't feel so good. Always let me know if I can do anything to help you baby. I love you lots and I'll see you later today. Muah.<br><br>-Joey"
    },
    {
        "title": "March 5th",
        "date": "2025-3-5",
        "content": "Hi baby! We have another late start! It's only a little bit, but at least it's something. I can't even believe how gross it is outside again. Want it to be summertime on a tropical island with you. Anyways, please stay warm and safe. I love you lots and I'll see you tonight. XOXO.<br><br>-Joey"
    },
    {
        "title": "March 6th",
        "date": "2025-3-6",
        "content": "Hey cutie. I'm glad you have been feeling better than the start of the week. I think these couple days are going to be the last cold days. It's supposed to be 70 on monday! I literaly can't believe that it's almost spring break already. Everything is going soo fast. I am excited for this summer. I can't wait to be able to see you without constantly having to worry about school. I think we're going to have a really good summer. I will see you later and I love you honey. Have a good day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "March 7th",
        "date": "2025-3-7",
        "content": "Hello darling! I might not be able to see you a whole bunch today, but it's okay. You will have fun at your event and I have to go to initiation. I hope you have a good day, and I promise we will have a fun weekend. We can go to the musical and have a sleepover :) I love you always, baby. I hope you are having a good week. Big kiss. <33 <br><br>-Joey"
    },
    {
        "title": "March 8th",
        "date": "2025-3-8",
        "content": "Good morning dear. I'm excited to spend the day with you. We can get lunch and go to your musical and then maybe just work on some things together. Those are my favorite kind of days. I will see you soon, I love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "March 9th",
        "date": "2025-3-9",
        "content": "Hi Baby! I'm glad I finally got a bunch of Sophie time. It's never enough, but I think we will be a little less busy this week. We can just enjoy the beautiful weather and I'll see you whenever I can. I love you lots dearest. Muah.<br><br>-Joey"
    },
    {
        "title": "March 10th",
        "date": "2025-3-10",
        "content": "Hi pumpkin. You are going to do such a good job at your interview today. You are the smartest person I know and you're going to blow them away. Don't be nervous honey, you got this. Maybe we'll even get to work on a project together next year hehehe. I love you a billion times. Muah.<br><br>-Joey"
    },
    {
        "title": "March 11th",
        "date": "2025-3-11",
        "content": "Good morning, sweetie. I hope you're tummy is feeling a little better today. In case you see this first, your coffee should be ready for you at 8:45. Let me know if I can do anything at all for you always. I hope that we have time to see each other later. I just want to snuggle for a while and hold you. I love you sooo much baby. Have a good day for me. <3 <br><br>-Joey"
    },
    {
        "title": "March 12th",
        "date": "2025-3-12",
        "content": "Hi baby. I hope you're feeling a little bit better today. Please keep trying to eat, it's important. Enjoy the beautiful weather and not having any assignments to worry about. I'll see you later darling. I love you always. Muah. <br><br>-Joey"
    },
    {
        "title": "March 13th",
        "date": "2025-3-13",
        "content": "Hey sweetie. Please keep letting me know how you're feeling. It makes me sad when you don't feel good, I just want you to feel a little better. I think break and going to the doctor will help. I might be busy this morning but we will have a sleepover tonight :) I Love you deary. Muah.<br><br>-Joey"
    },
    {
        "title": "March 14th",
        "date": "2025-3-14",
        "content": "Happy Pi Day! I'm sad that we have to go on break now but I think it will be good for us to finally get a little break from school. I know it would be fun to go on a big vacation somewhere but just think about all the hassle and worrying about money and everything. Try to see any of your friends you haven't in a while and just get caught back up on everything. We will talk every day and play our farm game and I promise the week will be over before you know it. I'm glad you're home safe and sound and I love you so much. Have a good break for me honey you have earned it. Big hug from me.<br><br>-Joey"
    },
    {
        "title": "March 15th",
        "date": "2025-3-15",
        "content": "Hi sweetie. Today I drive home for break. Wish me a safe drive please! I will miss you and being at school. I already can't wait to be back and hanging out with you. Keep me updated about everything you're up to! I hope you find some fun things to do and relax. I love you baby. Have a good day. Muah.<br><br>-Joey"
    },
    {
        "title": "March 16th",
        "date": "2025-3-16",
        "content": "Hello my love. We're both back home for break now. It's time to just relax. You can sleep in if you want or lay around doing nothing, whatever you want. I miss you already. I want a hug and a kiss and to snuggle with a bunch of blankets and stuffed animals. But it's ok, the week has already started to pass by. I love you always baby. Have a good day for me.<br><br>-Joey"
    },
    {
        "title": "March 17th",
        "date": "2025-3-17",
        "content": "Hi baby! There's only 5 more days left until I get to see you. I'm already excited :) I have interview today. Even though it's not my perfect job it would still be good to at least get one option for this summer, so wish me luck. I hope you have relax or find something fun to do while you're on break. I want you to have a good day even though we're far a part. I love you sweetheart. XOXO<br><br>-Joey"
    },
    {
        "title": "March 18th",
        "date": "2025-3-18",
        "content": "Hi schmoopy. The days are going by so fast! It's already Tuesday. I'm going to be pretty nervous today because of my interview. I'm just really scared that I'm not going to find anything and then I don't know what will happen. I just want to have our fun summer together. Or at the very least in Nebraska together with apartments, we can hang out in all alone and have money to go do fun dinners and trips. Let me focus in the morning and hopefully this will work out. I do have a pretty good feeling about it since Jillian also got a job there and we're pretty similar I think. I love you always baby. Have a good day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "March 19th",
        "date": "2025-3-19",
        "content": "Hi baby! The days are flying by. I promise we will see each other in no time ok! Be safe today with the weather please. I love you so much. Muah.<br><br>-Joey"
    },
    {
        "title": "March 20th",
        "date": "2025-3-20",
        "content": "Hey honey! Can you believe it's Thursday already? Break is almost over and I'm really excited to see you again. I want a giant kiss and big hug. I'm so so relieved about the whole internship thing. We will still have a great summer and we can spend lots of time together with our good jobs ok. Keep getting some things off your to do list and we will be back in Lincoln soon. I love you dearest. Muah.<br><br>-Joey"
    },
    {
        "title": "March 21st",
        "date": "2025-3-21",
        "content": "Hello my love. This is the last day of break! Tomorrow we get to go back to Lincoln and see each other. I hope you have had a restful break and feel good about the rest of the semester. I feel a lot better now that I don't have to worry so much about my job and money and things. I just want to finish up our classes and spend time together. Have a good last day of break and I'll see you so soon! I looooove you dearest. Muah.<br><br>-Joey"
    },
    {
        "title": "March 22nd",
        "date": "2025-3-22",
        "content": "Guess what honey? I get to see you today! Spring break is over and I can't wait to see you later. I want a big big hug and kiss. I've missed you so much. I'm sorry you have been a little stressed about school and everything but I promise it's going to be ok. We will help each other this weekend and get the semester off to a good start. It's not too long until Summer now, and I hope we can find some fun things to do together! I love you always baby. Drive safe today and I'll see ya soon!<br><br>-Joey"
    },
    {
        "title": "March 23rd",
        "date": "2025-3-23",
        "content": "Hi baby. I sorry this note is late. It always is when we have our sleepovers. I had a really good day with you yesterday and today. I'm so happy we are back together. I know that break wasn't the most restful. We are always so so busy. I might have a busy first three days of school this week too, but I will still try to see you. I love you lots honey and I hope you have a great week. Muah.<br><br>-Joey"
    },
    {
        "title": "March 24th",
        "date": "2025-3-24",
        "content": "Hi lovey. It's the first day of school back after break today. I hope you have a good day of work and classes. You're doing such a good job with everything. You spent so much time on your art project and it turned out really good I think. Keep it up baby, it will all pay off soon. I think I will have time to see you after chapter and we can hang out and relax a little bit. I love you a billion. Have a good day for me! XOXO.<br><br>-Joey"
    },
    {
        "title": "March 25th",
        "date": "2025-3-25",
        "content": "Hi sweetheart. I'm really sorry you've been feeling sicky. Please don't push yourself today with classes. Rest up and drink a bunch of water or tea or Gatorade and get to the health center. I really just want you to feel better. Everything with school will be just fine so take care of yourself first. I have my interview today so I will probably be a little nervous, but I think it will go well. I know there are some weird parts of it, but I really think it would be fun to both live here in Lincoln this Summer. I'll see you later baby, let me know if I can do anything for you always. I love you dear. Muah.<br><br>-Joey"
    },
    {
        "title": "March 26th",
        "date": "2025-3-26",
        "content": "Hi dearest. I'm sad that you have been feeling so icky. At least it doesnt sound like anything serious, and I hope you will feel better really soon. I hate seeeing you sicky :( Keep resting up for me and when you're all better we can maybe have a sleepover or go watch a movie or something fun. I love you lots baby. Try to have a good day for me and don't push yourself. Muah.<br><br>-Joey"
    },
    {
        "title": "March 27th",
        "date": "2025-3-27",
        "content": "Hi sweetie. Can you believe that March is almost over already? I hope you're finally feeling better. I know it's hard to be sick but everything is going to be ok and you're doing a great job. I'll try to figure out about Hudl today and I really hope that it works out. I just want to be able to see you a bunch this Summer, even more than last Summer. I love you lots baby. Have a good day for me.<br><br>-Joey"
    },
    {
        "title": "March 28th",
        "date": "2025-3-28",
        "content": "Hi schmoopy. I'm really excited about working in Lincoln this Summer! We get the whole Summer to hang out and just focus on work and not a billion things at school. I hope we will find a bunch of fun things to do together. I'm glad you're feeling better. I bet you are all done being sick for a while now. I'll see you later and I love you baby. Muah.<br><br>-Joey"
    },
    {
        "title": "March 29th",
        "date": "2025-3-29",
        "content": "Hello my dearest. I'm sorry that you have a long day today. I hope that it's not too boring and that you don't have much more work this semester. At least enjoy the nice weather! I will see you later and we can hang out a little bit. I just have to focus on my spanish test a little bit. I love you dear. Have a good day for me!<br><br>-Joey"
    },
    {
        "title": "March 30th",
        "date": "2025-3-30",
        "content": "Hi baby. Late note today because we had out sleepover! I always love my nights with just my baby. My favorite thing is to wake up and just get to snuggle with you. I hope you have a good day and have a good week too. I'm always here for you baby and you're doing a great job. Muah.<br><br>-Joey"
    },
    {
        "title": "March 31st",
        "date": "2025-3-31",
        "content": "Good morning my love. I hope you got a good night's rest. I miss holding you and hanging out already. We're going to have a busy day but if it works out we can go see my Grandma and Grandpa today. I bet they would love to see you, honey. My whole family loves you :) Have a good Monday love. Muah.<br><br>-Joey"
    },
    {
        "title": "April 1st",
        "date": "2025-4-1",
        "content": "Hi lovey, happy monthaversary! We're getting close to a THOUSAND Snapchat streak and two whole years of dating. I can't believe it. It feels like it's been so fast. I am excited to see you today and hang out a little. Have the best day for me my dear, and I'll see you later. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "April 2nd",
        "date": "2025-4-2",
        "content": "Hey sweetie. Did you get a good night's sleep? Please get something yummy to eat. I'm sorry you weren't feeling the best yesterday. It'll be a little nicer out today, just rainy and cloudy. I hope I can see you later and maybe we can cuddle for a little bit. I love you always my love. Have a good day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "April 3rd",
        "date": "2025-4-3",
        "content": "Hello, my love. I'm glad that we're having a little more calm of a week. It's going by so fast! There are only 6 weeks left in the school year. I can't believe it. I'm really excited for the Summer and getting to have a fun three months with you. Then we'll be back here as Juniors. It's so scary but I'm glad that we will be doing it together. Anyways, have a good day for me. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "April 4th",
        "date": "2025-4-4",
        "content": "Good morning baby. Have a good morning at work today. I know it's not the most fun but I bet you will look back and be glad you at least tried a cool new job. Later we can go and have a cutie date and get some yummy ramen. I can't wait to see you! Have a good day my love, see you soon. Muah.<br><br>-Joey"
    },
    {
        "title": "April 5th",
        "date": "2025-4-5",
        "content": "Hi lovey! Today we get to go to Ivy Day! I'm so so proud of you honey. You deserve the award and I'm really excited for you. Even though the ceremony is a little boring I'm happy to get to go with you. You're my smart girl always. I'll see you soon honey. I love you lots and I hope we get to spend some time together today. Muah!<br><br>-Joey"
    },
    {
        "title": "April 6th",
        "date": "2025-4-6",
        "content": "Hey hey. Happy founder's day baby. I think we made the right decision not going to Chicago. Otherwise we would be driving home alll day today. I'm really glad I got to just spend some time with you this weekend. We only have 5 weeks left of school and then we can have a fun summer together! Have a nice day baby. I'll see you later and we can work together or whatever you want. I love you.<br><br>-Joey"
    },
    {
        "title": "April 7th",
        "date": "2025-4-7",
        "content": "Hi babe. I know you had a busy weekend, but I hope this week will be okay for you. Today we can study for your 231 exam together and you don't have to worry about getting your 90, I know you can do it. I hope you have a good day. We don't have that many days of sophomore year left! I love you baby. Muah.<br><br>-Joey"
    },
    {
        "title": "April 8th",
        "date": "2025-4-8",
        "content": "Hi hon. Good luck on you test today. I know you will get the grade you need. Thank you for spending time with me yesterday. I love you lots and hopefully I can see you later today. Have a good day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "April 9th",
        "date": "2025-4-9",
        "content": "Hey honey. It's another pretty normal day today. The weather will be ok I think, maybe just a little dreary. You're doing such a good job with your classes and everything. I'm very proud of you. I hope that your friends don't annoy you about rooms too much today. I know it's annoying but they all just care about you. I love you baby and I hope you have a good day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "April 10th",
        "date": "2025-4-10",
        "content": "Hello baby. Late note but I always love our sleepovers! I could stay snuggled in bed with you for ever and ever. Ty for being understanding about grandpa. It means a lot to me. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "April 11th",
        "date": "2025-4-11",
        "content": "Hi dearest. I miss you a lot but I will see you later today. It has been good to see all my family and I'm glad I got to come. I hope everything is going well for you. I'll see you soon! Love you.<br><br>-Joey"
    },
    {
        "title": "April 12th",
        "date": "2025-4-12",
        "content": "Hey baby. Are you feeling any better today? I'm sorry your tummy felt bad last night. You don't have to do anything at all today if you are feeling sick, I promise. Take it easy baby, you have been working so hard. If you feel up to it we can go visit my family and they will all be so excited to meet you. I love you honey. Muah.<br><br>-Joey"
    },
    {
        "title": "April 13th",
        "date": "2025-4-13",
        "content": "Hey hey. I think that the long week is finally over. It was nice for me to go and see everyone this week but now I can get back to you and school. I'll see you today and we will have a sleepover! I can't wait baby. Have a good day for me, I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "April 14th",
        "date": "2025-4-14",
        "content": "Hi baby. Sorry for late note! My favorite nights are the ones when we just get to hang out together. I'd rather do that than anything else. You make me so happy my dear. I don't know how much I'll be able to be with you this week because I need to focus on my clay, but we will still see each other. Love you baby!<br><br>-Joey"
    },
    {
        "title": "April 15th",
        "date": "2025-4-15",
        "content": "Hi pumpkin. Good news, it's not supposed to be so windy today! I love when we get good weather. It make me sad when you have to go out into the wind and the cold. You're my girl and I want to keep you comfy all the time. Let me know if I can do anything for you dear. I don't have too much going on. I just have ceramics and Spanish to get ready for mostly. I love you lots honey. Have a good day!<br><br>-Joey"
    },
    {
        "title": "April 16th",
        "date": "2025-4-16",
        "content": "Hi schmoopy. Yesterday went by really quick but I think that we both got a lot done that we needed to. I'm glad to be ahead with my ceramics now. I want to spend my last week making some fun things for me and you too! Enjoy the nice weather today at work baby. I think the yucky winter is almost done for the year. I love you baby, have a good day and I'll see you later today. Muah.<br><br>-Joey"
    },
    {
        "title": "April 17th",
        "date": "2025-4-17",
        "content": "Hi hon. It's always my favorite time to have a sleepover with you. I'm glad I got to see you and wake up to start my day with you. Love you. Muah.<br><br>-Joey"
    },
    {
        "title": "April 18th",
        "date": "2025-4-18",
        "content": "Good morning honey. I don't want to argue with you. I love you and I hope you have a good day. Let me know if I can bring you lunch later and maybe we can eat together. See you soon. Muah.<br><br>-Joey"
    },
    {
        "title": "April 19th",
        "date": "2025-4-19",
        "content": "Hi honey. I had a good day today because I got to start my day waking up with you and end my day getting dinner with you :) I hope that you get to feeling a little better and get a good night's sleep. Tomorrow is Easter and we will have Sophie and Joey day. Love you always darling. Muah.<br><br>-Joey"
    },
    {
        "title": "April 20th",
        "date": "2025-4-20",
        "content": "Hi baby! I'm excited to spend the day with you. Even though the weather will be yucky we can have a fun time at lunch with your family. It will be good for you to see them and then we can get back home and finish up our work. Remember that we only have a couple of weeks of school left! And then we're halfway done already. So even though it's boring sometimes keep working on school because it won't last forever. I love you dear, see you soon.<br><br>-Joey"
    },
    {
        "title": "April 21st",
        "date": "2025-4-21",
        "content": "Hi hon. Thanks for a fun day yesterday! It's another busy Monday for us but maybe I can see you later today. I hope you have a good day of classes. You're doing such a great job with everything! I love you dear. See you soon, muah.<br><br>-Joey"
    },
    {
        "title": "April 22nd",
        "date": "2025-4-22",
        "content": "Hi hi baby. It looks like we'll have another nice day today! I hope that you will have a good day. We can try to get lunch together and enjoy the weather. After that, I will probably have to lock in and get some work done for Spanish and software. Then maybe if we have time we can hang out later. I can never get enough time with my Sophie. I'll see you later dearest. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "April 23rd",
        "date": "2025-4-23",
        "content": "Hello darling. I think we will both have pretty busy days today. It's okay if you're too busy to hang out, I can see you tomorrow and Friday for sure. Tonight I'll try to win trivia and get a prize for you hehe. Have a good day and remember that the semester is so close to being done! Just a few more tough weeks dear. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "April 24th",
        "date": "2025-4-24",
        "content": "Hi sweetie. I miss you, honey. I hope I get to hang out with you later. You have to come over because I have a surprise for you hehe. I'm glad that you have a calmer week. Things are winding down! We just have to worry about finals and then the semester will be over dear. I'll see you soon and I love you lots.<br><br>-Joey"
    },
    {
        "title": "April 25th",
        "date": "2025-4-25",
        "content": "Hey baby. I'm excited for our formal today! We finally have a day where we can hang out for more time. It's been a fast week already, I can't believe it. We're so close to the end of the year. It's scary but also I'm excited for this Summer with you. I love you dear, and I'll see you soon.<br><br>-Joey"
    },
    {
        "title": "April 26th",
        "date": "2025-4-26",
        "content": "Hi honey. Late note! I'm glad that we got to spend some time together for formal and then have a sleepover. Even though it was a long night I was glad to be there with you and everyone really appreciates you keeping everything safe. Love you honey!<br><br>-Joey"
    },
    {
        "title": "April 27th",
        "date": "2025-4-27",
        "content": "DOUBLE sleepover. Hehe my favorite. I always love to just relax with you no matter what Sophia. I could snuggle with you under the covers for ever and never get enough. We will have so many more fun nights together. I love you dear. Muah.<br><br>-Joey"
    },
    {
        "title": "April 28th",
        "date": "2025-4-28",
        "content": "Almost May! Can you believe it baby? It's almost time for a break from school and living in Chi O and hopefully being so busy. I'm looking forward to Summer with you more and more. Tnere's onlye one more week of classes and things so keep up the good work dear. I love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "April 29th",
        "date": "2025-4-29",
        "content": "Hi baby. I'm sorry that yesterday wasn't good. I hope you feel better today at least a little. After 5 today I really have to lock in and finish up all my ceramics for the year. But let's get lunchy together at least. Let me know if I can help with anything at all dear. I want to help you feel better. I love you lots honey. Keep resting up as much as you can. Muah.<br><br>-Joey"
    },
    {
        "title": "April 30th",
        "date": "2025-4-30",
        "content": "Good morning my dear. It sucks that you have been feeling icky but I hope you keep resting up like you have been and get a little better each day. Always tell me if I can help with anything for you dear. Things are so close to being wrapped up, I can't believe it. I'm scared and excited to start work this summer. It's so crazy that we both ended up in this situation and will be at Hudl where we toured like three years ago together. I'm excited to be with you for it, though! Love you, honey. Have a good day for me.<br><br>-Joey"
    },
    {
        "title": "May 1st",
        "date": "2025-5-1",
        "content": "Hi baby, happy 20 months! I know that it has been a bad week for you but keep reminding yourself that we are so so close to being done. You just have to wrap up your classes and then you will be all finished. You have everything under control and you're doing a great job sweetie. You can keep resting a little bit and letting your body heal up. I will see you later honey, I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "May 2nd",
        "date": "2025-5-2",
        "content": "Hey honey. It's a busy day for me today, but I will see you later if it works out. I'm glad that you're starting to feel a little better. Keep taking it easy and everything will be alright. We basically have two weeks left now! Love you dearest. Have a good day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "May 3rd",
        "date": "2025-5-3",
        "content": "Another sleepover morning with my honey. Even if we don't always sleep the best in my tiny little bed I'm still happy to get to snuggle with you alll night. Love you baby, have a good day for me.<br><br>-Joey"
    },
    {
        "title": "May 4th",
        "date": "2025-5-4",
        "content": "Happy Sunday dear. It's dead week!! That means less than two weeks and we will be DONE with sophomore year. I hope that you're excited for the summer. No more tours at 9 in the morning or dumb comp sci 231 asignments. I'm excited to get to hang out with you and have less stress together. I love you baby. We're almost there! Muah.<br><br>-Joey"
    },
    {
        "title": "May 5th",
        "date": "2025-5-5",
        "content": "Hey dearest. Dead week is here! I really hope you start feeling better. It makes me sad that you feel icky :( Monday is our busy day, but maybe we can say hi later. You can always let me know if I can do anything for you. Please try to have a good day for me. I love you dear. Muah.<br><br>-Joey"
    },
    {
        "title": "May 6th",
        "date": "2025-5-6",
        "content": "Hi babe. I'm really mostly done with the hard parts of the rest of the semester already. Please let me know if I can help you with anything, I know that you are not feeling good. If you just need a quiet place to take a nap or work you are always welcome to come to my room. I want your week to go well. Today we can have lunchy together and maybe hang out later if you feel up to it. I love you sweetie. Big kiss. Muah.<br><br>-Joey"
    },
    {
        "title": "May 7th",
        "date": "2025-5-7",
        "content": "It's Wednesday already! I know you have a busy day today so I will leave you alone to focus. But then tonight we will hang out and get you some yummy dinner if you feel like it. You're going to do a great job on finishing up your classes baby, try not to worry too much. You're always my smart smart girl. I'll see you later baby. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "May 8th",
        "date": "2025-5-8",
        "content": "Two more days of dead week left! I'm glad that you are feeling a little better now and that you got a lot done yesterday. We are on the downhill for this semester baby. I'll see you later my love. Have a good day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "May 9th",
        "date": "2025-5-9",
        "content": "Hi pumpkin. It's always my favorite part of the day to spend time with you. I just want to snuggle and relax and hang out together. I hope that we have time to do that later, and then we have the weekend to wrap up the school year! It went by so fast but I think that's a good thing. I hope you have a good day dearest. Love you always. Muah.<br><br>-Joey"
    },
    {
        "title": "May 10th",
        "date": "2025-5-10",
        "content": "Hey hey honey. We got to have a sleepover last night, hehe. I always look forward to hanging out with you and getting to see your pretty face. I'm glad you're feeling all better! Now we can finish off this last week of school strong. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "May 11th",
        "date": "2025-5-11",
        "content": "Good morning my love. Today we get to spend the day together. We can go to Omaha and see your family and have a yummy lunch and then do whatever else you want. I know that yesterday was a not so good day, but I promise that everything is going to be okay. I'll see you soon baby. Love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "May 12th",
        "date": "2025-5-12",
        "content": "Hi my sweetie. It's finals week! Good luck with your project and last test this week honey. I know you're going to do great. I hope you got a nice restful sleep last night and are back to feeling 100%. I don't have too much going on today, just studying. So let me know if I can do anything for you. I'll see you sometime today my dear. I love you :) Muah.<br><br>-Joey"
    },
    {
        "title": "May 13th",
        "date": "2025-5-13",
        "content": "Hi dear. We're so so close to being done with the semester. I'm getting nervous but excited at the same time for the Summer. It will be interesting to get used to working at Hudl with you. I think that we will have a lot of fun! I hope I get to see you a little these last few days, but if we don't get tons of time, just know that we will see each other so much this summer! I'm very excited to be so close to you with our own spaces :) Love you dear. Have a good day.<br><br>-Joey"
    },
    {
        "title": "May 14th",
        "date": "2025-5-14",
        "content": "Oneeee more day of real school baby! I know that you're going to do great on this last exam and then you can put the year behind you! No more worrying about dumb 231 labs anymore. Then we can start to focus on this summer. I'm really proud of you baby. Keep it up for one more day! Love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "May 15th",
        "date": "2025-5-15",
        "content": "Good morning my love. Good luck on your last exam today! I know that you're going to do a good job, and then you'll be alllll done. You can finally relax a little bit and focus on getting ready for the summer. I know that I'll be home for a few days, but I hope you can find some fun things to do in the time you're here alone. I love you always and hopefully we can hang out later and have a sleepover :) Muah.<br><br>-Joey"
    },
    {
        "title": "May 16th",
        "date": "2025-5-16",
        "content": "Hi schmoopy. I know I'm gone but I'll see you really soon! Miss you and love you always. Muah.<br><br>-Joey"
    },
    {
        "title": "May 17th",
        "date": "2025-5-17",
        "content": "Hello my love. I know we're apart and I miss you but I am glad that you finally have some time to relax! I'm sure that when we start working we will get a little busier again, but in a good way I hope. I'm so excited to see you on Sunday and to start an exciting summer with you. You are my smart beautiful girl always Sophia. I love you lots! Muah.<br><br>-Joey"
    },
    {
        "title": "May 18th",
        "date": "2025-5-18",
        "content": "Hi my dearest. I'm really excited to see you today! I will have a really busy morning and will probably be in a little bit of a rush getting home and unpacked. I'll go as quick as I can and then we can see eachother tonight and hang out in our new apartments :) I hope you are excited for the summer my love. I'll see you soon and I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "May 19th",
        "date": "2025-5-19",
        "content": "Hello sweetheart. I hope you have the best day at work!!! I'm real excited for you and for me. I will need to lock in for a while after work to get my room set up but maybe we can hang out later if we don't have any other plans. I love you lots honey. Muah!<br><br>-Joey"
    },
    {
        "title": "May 20th",
        "date": "2025-5-20",
        "content": "Hi pumpkin. I am sad that you didn't feel good yesterday. It's not fair that you are sick again, but I'm proud that you are pushing through it. I hope you feel better today or soon at least and I'm here for you. I had a really fun time yesterday working with you :) I think it's good that we will go off on our own teams for most of the summer, but it's nice knowing you're there with me. Love you baby. See you later today!<br><br>-Joey"
    },
    {
        "title": "May 21st",
        "date": "2025-5-21",
        "content": "I think that yesterday was a little better day for you and that's good baby. I hope you feel even better today and can get over whatever this weird thing is soon. I would love to hang out more and snuggle in bed but we need to make sure we're both healthy first and we have lots of time left in the summer to see each other. I love you baby, have a nice day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "May 22nd",
        "date": "2025-5-22",
        "content": "Good morning love. Please do your best to rest up today and feel better. I'm always here for you my beautiful girl. I hope you can have an ok day and I will see you later. I love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "May 23rd",
        "date": "2025-5-23",
        "content": "Hello my love. I know that you have had a hard week being sick and trying to do your best at work. Today is Friday so hopefully you can make it through one more day and then get a little break. Let me know anything I can do for you, ok? I love you baby. Have a good day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "May 24th",
        "date": "2025-5-24",
        "content": "Hey sweetie. We made it through the first week! I know it wasn't perfect but I think we both had some good parts at least. Now hopefully you can start feeling better over the weekend with your medicines and then we can take a little road trip on Wednesday. Love you baby. Muah.<br><br>-Joey"
    },
    {
        "title": "May 25th",
        "date": "2025-5-25",
        "content": "Hi baby. I'm glad that you got to get home to see your mama and some friends. Please drive home safe and maybe we can hang out a little bit later. I think it's fun being so close to you. We get to see each other whenever we need :) I am really sorry about your package going missing but I think we will be able to find it. Don't worry too much at least until Monday because it's possible it hasn't even been delivered. Anyways, have a good day sweetie. I love you.<br><br>-Joey"
    },
    {
        "title": "May 26th",
        "date": "2025-5-26",
        "content": "Hi dear. Work a little today but no more silly meetings! I hope you can find something to do for a while and have a good day. I'll see you later at least for a little bit. Love you, muah.<br><br>-Joey"
    },
    {
        "title": "May 27th",
        "date": "2025-5-27",
        "content": "It's another work day today! I hope you have a good day at work and are able to find your package with Lauren. I have high hopes that you will get it back. It's crazy that tomorrow we're driving out to Colorado. I'm glad that you're coming with me :) It will be a lot of driving but you can have some snacks and rest or whatever you want. Have a good day for me today. I love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "May 28th",
        "date": "2025-5-28",
        "content": "Hi baby! Short note today because I really have to go night night. I'm really excited to go on a little trip with you! It will be long and even when we get there probably really boring but I'm glad you are coming with me. I know we will feel rushed but we will get there safe and sound no matter what, I promise. See you soon love, muah!<br><br>-Joey"
    },
    {
        "title": "May 29th",
        "date": "2025-5-29",
        "content": "The weather for graduation was so yucky but I am really glad you were there honey. I hope there's not too many times that we have to sit out in the rain like that but being with you makes it easier :)<br><br>-Joey"
    },
    {
        "title": "May 30th",
        "date": "2025-5-30",
        "content": "It was a looong drive back home today! Thank you for helping get us home safe and sound. It's good to be back in Lincoln with all our things and our jobs and some peace and quiet. I'm looking forward to the rest of the summer with you! Muah.<br><br>-Joey"
    },
    {
        "title": "May 31th",
        "date": "2025-5-31",
        "content": "Hi baby. I always miss you a little when you are away for the day but I always want you to see your friends. We get lots and lots of time together now so it's good to take little breaks! I hope you have a fun fun day and then can rest up at home for a night. Muah.<br><br>-Joey"
    },
    {
        "title": "June 1st",
        "date": "2025-6-1",
        "content": "Hi honey. It's been a busy couple days! I am glad that you got to see a bunch of peple and come to CO with me. Now, it can be time to relax a little bit. I'm planning on focusing up on work a lot. I will see you later but please drive safe. I love you lots, muah.<br><br>-Joey"
    },
    {
        "title": "June 2nd",
        "date": "2025-6-2",
        "content": "Morning hon. We have both had real busy weekends but we have finally gotten all the big things out of the way for a while. No more driving for hours and hours! I hope you can rest up a little this week, even if work is going to be silly. I'll see you soon my love. Have a good week for me! Muah.<br><br>-Joey"
    },
    {
        "title": "June 3rd",
        "date": "2025-6-3",
        "content": "I'm really proud of all you're doing at work! I've heard other people on your team talking about how great of a job you're doing with your designs. Keep it up honey! Muah.<br><br>-Joey"
    },
    {
        "title": "June 4th",
        "date": "2025-6-4",
        "content": "Good morning dearest. We just have a couple more days of skunkworks. I know it's been a little silly but I also had fun working with you a little bit. Next week we can really settle in and start working. Maybe we can also find something fun to do together after work one of these days. I'll see you later baby, I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "June 5th",
        "date": "2025-6-5",
        "content": "Hey hey. The week is flying by! Time to wrap up our projects and after that today we can relax a little bit! We just get to play some volleyball and hang out with everyone or do whatever we want. I really doubt we're going to have much else to work on. I love you baby, have a good day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "June 6th",
        "date": "2025-6-6",
        "content": "Hi lovey. One more day of our silly week left! Then, it's the weekend, and after that, we will have a normal normal week. I have been really happy to see you so much and get to walk down to see you whenever we want. The summer is going fast already I think, but we still have plenty of time left. I hope you have a good. day. Bitsconf yayyyyyy. Love you always. Muah.<br><br>-Joey"
    },
    {
        "title": "June 7th",
        "date": "2025-6-7",
        "content": "Good morning hon. You did a really great job this week. I'm glad it's over with. I hope we can hang out and relax together this weekend. Love you always.<br><br>-Joey"
    },
    {
        "title": "June 8th",
        "date": "2025-6-8",
        "content": "Hello my dear. Love you lots! Have a great day for me and I see you soom. Big kiss. Muah.<br><br>-Joey"
    },
    {
        "title": "June 9th",
        "date": "2025-6-9",
        "content": "Hi honey. I had a really fun weekend with you. Now we can get back to work! The summer is going by so quick I feel, but there is plenty of time left to hang out and have fun together. Have a good day for me. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "June 10th",
        "date": "2025-6-10",
        "content": "Good morning my dear. I know it sucks that you have to go to your appointment today. Please drive safely for me. I'm proud of you for taking care of yourself even though it's hard. I hope your hands will feel better after this time. Don't push yourself too much today honey. One day of work isn't worth it. Maybe even just try to work from home where you can be more comfy. Let me know if I can do anything for you. Love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "June 11th",
        "date": "2025-6-11",
        "content": "Hi sweetie. You've been working so hard lately and you're doing such a good job. I'm happy that we still have time to see each other every day. I'll see you later baby. Have a good day for me. <3 <3<br><br>-Joey"
    },
    {
        "title": "June 12th",
        "date": "2025-6-12",
        "content": "Hi honey. Almost done with week four already. It's going by so fast. I hope that you're having a good summer so far even if some parts have been stressful. We will have lots more summers and years together. I love you lots baby. Muah.<br><br>-Joey"
    },
    {
        "title": "June 13th",
        "date": "2025-6-13",
        "content": "Hello schmoopy. Last day of work for the week. I like getting to see you throughout the day hehe. You're my pretty baby, always remember that. You're doing a great job with your work and I know that everyone you're meeting is really impressed by you. Keep it up my love. See you later, muah!<br><br>-Joey"
    },
    {
        "title": "June 14th",
        "date": "2025-6-14",
        "content": "It's sleepover night today - my favorite part of my week. I like when you let yourself relax after all you do during a busy day. You deserve it honey, and I always want to help however I can. Always tell me what I can do to make you happy baby. I love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "June 15th",
        "date": "2025-6-15",
        "content": "I have been having a really good Summer so far. Even better than last year. I hope you have too, honey. I am really happy with you here and I think that everything worked out just how it was supposed to. I love you dear. Muah.<br><br>-Joey"
    },
    {
        "title": "June 16th",
        "date": "2025-6-16",
        "content": "Hi sweetie. I had a fun weekend with you baby. I'm so happy that we are here together :) I hope you have a good week at work and can settle in now that we are doing our real work a little bit. I'll see you soon honey. Big kiss for me. Muah!<br><br>-Joey"
    },
    {
        "title": "June 17th",
        "date": "2025-6-17",
        "content": "I love to end my day with you baby. After a long busy day nothing feels better than snuggling up with you in a warm bed and watching some reels. Can't wait for our king-size bed some day :) Love you!<br><br>-Joey"
    },
    {
        "title": "June 18th",
        "date": "2025-6-18",
        "content": "Hi honey. I think I finally feel a little bit settled into work now. It sounds like things are a little crazy over on your team but I hope that you're finding some func parts to work on. On Thursday we can have a fun day together and then have some us time on the weekend too. Keep up the good work dear, I'm proud of you always. Muah.<br><br>-Joey"
    },
    {
        "title": "June 19th",
        "date": "2025-6-19",
        "content": "Hi my dear. We get a day off of work today hehe. I hope that we can hang out a bunch and you can get some work done. I know you're a little bit stressed but you're doing a great job and you will get everything you need to done. I'll see you later baby. Muah.<br><br>-Joey"
    },
    {
        "title": "June 20th",
        "date": "2025-6-20",
        "content": "Good morning, sweetie. I hope you got some things done yesterday and rested up a little bit. Thank you for helping take care of me when I didn't feel good. I'm excited for our dinner tonight hehe. Just one day of work left then we can have our little date. Have a good day for me dear. I love you. Muah. <br><br>-Joey"
    },
    {
        "title": "June 21st",
        "date": "2025-6-21",
        "content": "Hi dear. I hope you're glad it's the weekend. We can hang out a bunch and go get some fun treats or do whatever you want. We have no other plans! The summer is going by so so fast but I'm having a good time so far. I'll see you soon dear. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "June 22nd",
        "date": "2025-6-22",
        "content": "Hey hey baby. I'm so proud of you thus summer. You are doing a great job at work, in your classes, and we still have time to see each other and hang out and go on little dates. The time is going so fast, probably because we're both really busy, but that's okay. I love you lots honey. Muah.<br><br>-Joey"
    },
    {
        "title": "June 23nd",
        "date": "2025-6-23",
        "content": "Morning honey! Back to another week of work today. I had a fun weekend with you :) I hope you have a good day today and get a good new picture. Love you honey. Muah.<br><br>-Joey"
    },
    {
        "title": "June 24th",
        "date": "2025-6-24",
        "content": "Hello my love. Picture day again! I hope you have a good day at work. Maybe later we can go get a little treat together hehe. I love getting to see you every day around work. Even if we don't sit together or anything it's nice to have you there with me. Love you lots, darling, muah.<br><br>-Joey"
    },
    {
        "title": "June 25th",
        "date": "2025-6-25",
        "content": "Hi honey! Can you believe that it's almost July? I hope you're looking forward to your little trip. We can both just relax for a couple days and see family, but we'll be right back together after. Have a good day for me love. Muah.<br><br>-Joey"
    },
    {
        "title": "June 26th",
        "date": "2025-6-26",
        "content": "Morning dear. I hope you slept well and got rested up last night. You were really sleepy and I know that you had a long day. I still got to see you though, hehe. Today will be a better day baby, I promise. We can have a more yummy lunch then hang out for a bit later if you have time. I love you always baby. Muah.<br><br>-Joey"
    },
    {
        "title": "June 27th",
        "date": "2025-6-27",
        "content": "Good morning, hon. It's Friday now. Time for us to relax a little bit.I'm sorry you had a tough week. It's all over or not. Love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "June 28th",
        "date": "2025-6-28",
        "content": "Hello lovey. I hope that you have been happy with how this summer is going. I know that some parts have been stressfull but I am happy that we ended up here together. I can't believe that we're already halfway through the summer, but also through college. You make the time fly when I'm with you baby. Have a good day today, I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "June 29th",
        "date": "2025-6-29",
        "content": "Hi baby! I had a really fun day with you yesterday. It was good to get to see everyone outside of work. Now today we can just rest up a little lol. We have a big day tomorrow! Back to Holmes hehe. Have a good day dear. I'll see you soon. Muah.<br><br>-Joey"
    },
    {
        "title": "June 30th",
        "date": "2025-6-30",
        "content": "Good morning honey. I hope you're a little bit excited about our activity today. I know it's been a lot of work for you. It's going to go well and then we can move on from it and you can do some work work. You did such a good job with it all and now we just get to go hang out with the little kids hehe. Have a good day for me, I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "July 1st",
        "date": "2025-7-1",
        "content": "Hi honey. Happy first!I hope you're having a good week so far. It's just two more days of work, and then we can go see our families for the 4th. Dirve safe today when you go to get your car and maybe we can hang out later if you have time. I love you baby, muah.<br><br>-Joey"
    },
    {
        "title": "July 2nd",
        "date": "2025-7-2",
        "content": "Good morning my love. Today you're leaving for our break. Please drive really safe honey. I hope that you have a nice drive and get some alone time and can just listen to music and drive. I will miss you but we will be back before you know it and we can both see some of our family. Have a great trip and I love you <3 Muah.<br><br>-Joey"
    },
    {
        "title": "July 3rd",
        "date": "2025-7-3",
        "content": "Hi sweetie. I drive home today and it sounds like you'll be busy too so we might not get ot talk to each other much today. I hope you have a good day with your family. I miss you but I'm glad that we both have some time to get away from Lincoln a little bit. I love you so much honey. I'll see you soon! Muah.<br><br>-Joey"
    },
    {
        "title": "July 4th",
        "date": "2025-7-4",
        "content": "Good morning schmoopy. Happy 4th! I know it's not your favorite holiday but I hope you have another good day today. I miss you but really I will see you so soon. Have fun with your family and hopefully you can relax and work on your to-do list. I love you baby. Muah.<br><br>-Joey"
    },
    {
        "title": "July 5th",
        "date": "2025-7-5",
        "content": "Hi baby. I miss you lots. We just have one more day of our little break and then we can go on our trip to Ikea and get back to Lincoln. I hope you are able to relax a little bit before we go back. You are doing a great job at work and I don't want you to be too worried because you're doing more than so many people already. I love you and I see you soon honey :) Muah!<br><br>-Joey"
    },
    {
        "title": "July 6th",
        "date": "2025-7-6",
        "content": "Hi sweetie! I get to see you soooo soon! I'm excited for our little adventure today and then to be back to usual with you. Please drive safe and I will see you later. I love you lots my dear. Muah.<br><br>-Joey"
    },
    {
        "title": "July 7th",
        "date": "2025-7-7",
        "content": "Hey sweetie. I hope you had a good day yesterday and got some work done. Back to work today! I'm happy to be back with you. Have a good day for me, I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "July 8th",
        "date": "2025-7-8",
        "content": "Hi pumpkin! It's good news that your work project got pushed back. I know it was stressful for you. Hopefully now you can relax a little bit more. Time is going by so quick as always so enjoy the time we have left this summer. I love you honey. Let me know if I can do anything for you. Big kiss for me. Muah.<br><br>-Joey"
    },
    {
        "title": "July 9th",
        "date": "2025-7-9",
        "content": "Hey baby. Have the best day for me okay. I love you lots and am always a call away. Muah!<br><br>-Joey"
    },
    {
        "title": "July 10th",
        "date": "2025-7-10",
        "content": "Hi honey. I love getting to wake up with you first thing in the morning. It makes me so happy to just snuggle with you in bed. I love you always. Muah.<br><br>-Joey"
    },
    {
        "title": "July 11th",
        "date": "2025-7-11",
        "content": "It was July 11, 2022, according to my calculations, when you sent me our first ever snapchat (I remember because you drew a heart on it). Since then we've sent 1090 more, even when we're apart or on a ship in the ocean or doing whatever else. And funnily enough, tonight we're going back to Sun Valley Lanes where we went bowling together at Raikes camp so long ago. It's fun to think about all the memories we have together so far. Have a good day today, I love you lots.<br><br>-Joey"
    },
    {
        "title": "July 12th",
        "date": "2025-7-12",
        "content": "Hi baby. I hope you had a good day today with your friends. I'm glad that you got to see them. I know that you haven't gotten to go home as much as you might have liked to this summer, but your friends will always be there when the timing works out. I'll see you tomorrow. I love you dear, muah.<br><br>-Joey"
    },
    {
        "title": "July 13th",
        "date": "2025-7-13",
        "content": "Good morning dear. I can't believe how little we have left of the summer. It's going so so fast. In some ways it will be nice to get back to school, I think. We can have new classes and new roommates and there will be lots of fun moments. We're going to be juniors! It's crazy, but I know that we will get through it together. Love you lots hon. I'll see you soon. Muah.<br><br>-Joey"
    },
    {
        "title": "July 14th",
        "date": "2025-7-14",
        "content": "Good morning dear. Back to another week of work. I know that you have quite a bit to do but please try to find some times to relax. I'm here for you if you need anything, ok? I love you. Have a good Monday for me. XOXO.<br><br>-Joey"
    },
    {
        "title": "July 15th",
        "date": "2025-7-15",
        "content": "Hi honey. I hope you are feeling a little better today. Sorry that lunch is yucky again :( Please try to eat a little bit at least, you need to eat lunch! Have a good day at work for me and maybe we will have enough time to hang out later. Love you lots. Mauh!<br><br>-Joey"
    },
    {
        "title": "July 16th",
        "date": "2025-7-16",
        "content": "Hi dear. I'm very proud of everything you are doing. You are so busy but you always get everything done that you need to. You're doing a great job and I know that everyone can see that! Love you dear. Muah.<br><br>-Joey"
    },
    {
        "title": "July 17th",
        "date": "2025-7-17",
        "content": "Hi baby. I'm sorry you had a rough day yesterday. Please stay home today and try to relax. Don't worry about missing one day of work, I want you to feel better. If you aren't feeling better, I think we should try to get you some medicine. Just take care of yourself and tell me how you're feeling. I love you, I'll see you after work.<br><br>-Joey"
    },

    {
        "title": "July 18th",
        "date": "2025-7-18",
        "content": "Good morning baby. I'm really glad that you are feeling a little better. It scared me when you were feeling really bad. Keep resting up and taking care of your tummy. Tell me if I can do anything for you. Only three weeks left after today! Have a good day at work today, I'll see you later baby. Muah.<br><br>-Joey"
    },
    {
        "title": "July 19th",
        "date": "2025-7-19",
        "content": "Good morning dear. Tomorrow's the big day! Have a nice drive for me. I know you've had to drive to Omaha a bunch but you can have some fun this weekend. I'll see you later, I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "July 20th",
        "date": "2025-7-20",
        "content": "Happy Birthday dear :) I'll keep this not too long because I know you'll have about a million posts and book pages to read through today. I'm excited to spend the day celebrating with you. I hope you have the best day, you deserve it. I love you lots, and I'll come see you soon (with your present). Big kiss, muah.<br><br>-Joey"
    },
    {
        "title": "July 21st",
        "date": "2025-7-21",
        "content": "Hi honey. Nothing makes me happier than spending time with you. I love you lots! Muah.<br><br>-Joey"
    },
    {
        "title": "July 22nd",
        "date": "2025-7-22",
        "content": "Hi baby. You were so sleepy yesterday so I hope you got a good night's rest. Maybe today you will be a little less busy and we can hang out and relax some more. We haven't gotten too much time all by ourselves lately. Like always tell me if I can help you with anything. I love you thiiiiiiiiiiis much. Have a good day at work for me sweetie. Muah.<br><br>-Joey"
    },
    {
        "title": "July 23rd",
        "date": "2025-7-23",
        "content": "Hi sweetheart. You're my favorite person, did you know that? I hope you have a good week. Love you lots. XOXO.<br><br>-Joey"
    },
    {
        "title": "July 24th",
        "date": "2025-7-24",
        "content": "Good morning lovey. Can you believe that our summer is almost over? I think that I'm getting ready to get back to school lol. I'm a little bored of doing the same thing every day. I've had a really good summer with you. I always think that we will have more time than we do, but we still did a lot of fun stuff this summer. Have a good day at work for me. I love you always. Muah.<br><br>-Joey"
    },
    {
        "title": "July 25th",
        "date": "2025-7-25",
        "content": "Hi baby. Have a great day for me. You're always my beautiful girl <3 Big kiss for you. Muah!<br><br>-Joey"
    },
    {
        "title": "July 26th",
        "date": "2025-7-26",
        "content": "You're doing a great job with everything honey. I'm proud of you doing your classes and work and everything else that's going on. Love you baby, like always tell me if I can help you with anything. Muah!<br><br>-Joey"
    },
    {
        "title": "July 27th",
        "date": "2025-7-27",
        "content": "Hi, dearest. I love getting to hang out together with just you. I had a nice day today :) Love you always, XOXO.<br><br>-Joey"
    },
    {
        "title": "July 28th",
        "date": "2025-7-28",
        "content": "Good morning hon. I'm glad we got to spend the weekend together. I had a lot of fun with you. We'll have lots more fun times this year when we get back to school. It's so crazy how fast the time has flown by. I hope you have a great week. I'll see you later. Muah, I love you.<br><br>-Joey"
    },
    {
        "title": "July 29th",
        "date": "2025-7-29",
        "content": "Hi sweetie. I hope you got a good night's sleep. Only a handful of days left here so I want you to have some good days and hang out with friends and hang out with Joey. I love you my dear, see you soon! Muah.<br><br>-Joey"
    },
    {
        "title": "July 30th",
        "date": "2025-7-30",
        "content": "Good morning my love. It's almost August! So crazy that it's almost time for school again. I know you would rather not drive to Omaha and back so much but I hope you have a good time with your friends this week. We've had lots of time together this summer and you should go see them before school starts up. Try not to worry about your classes or anything else, ok? Everything will turn out okay and we'll be back to school with a new year together soon. Love you lots honey. Muah.<br><br>-Joey"
    },
    {
        "title": "July 31st",
        "date": "2025-7-31",
        "content": "Hi dear. Over halfway through the week already! I hope you're at least a little ready to move on to the next thing for now, but keep up all your great work for the last week. Have a good day dear. Love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "August 1st",
        "date": "2025-8-1",
        "content": "Welcome to August baby. I'm glad you're coming with me to the wedding later. I hope it will be a little fun. Have a good day today. I love you, muah.<br><br>-Joey"
    },
    {
        "title": "August 2nd",
        "date": "2025-8-2",
        "content": "Hi dear. Thank you for coming with me and meeting all my family. They are excited to get to know you. Have a good day for me.<br><br>-Joey"
    },
    {
        "title": "August 3rd",
        "date": "2025-8-3",
        "content": "Hi sweetie. I'm glad that you got to go home yesterday. I miss you but it's good that you got to see your friends and rest a little bit an see your mom. I'll see you later today and we can hang out :) Drive so safe coming home and we'll get ready for our last week of work! So so crazy but it's time to get back to school. I love you honey. See you soon, muah.<br><br>-Joey"
    },
    {
        "title": "August 4th",
        "date": "2025-8-4",
        "content": "Hi baby, thanks for another sleepover night! Love you always, muah.<br><br>-Joey"
    },
    {
        "title": "August 5th",
        "date": "2025-8-5",
        "content": "Hey hey honey. Literally only a few days left in our summer! I cannot believe it, it's gone so fast. When we go home for a week I'll miss you. Then we have one more week to get all ready for school. I hope you have a good time in both, honey. We're' going to have a great new year! Love you always. Muah!<br><br>-Joey"
    },
    {
        "title": "August 6th",
        "date": "2025-8-6",
        "content": "Hi schmoopy. The week is flying by! I hope you're not too worried about moving back to Chi O and everything. It's going to work out and then you won't have to worry about it at all for a while. I love you lots and I hope we can spend some time together before I go home for a few days. Love you lots honey, muah <3<br><br>-Joey"
    },
    {
        "title": "August 7th",
        "date": "2025-8-7",
        "content": "Summer's almost over! You did a great job with everything this summer. Soon you can forget about your dumb teammates and weather class. Once we get settled back into school, we can have lots of fun together. Have a good day today.<br><br>-Joey"
    },
    {
        "title": "August 8th",
        "date": "2025-8-8",
        "content": "Good morning dear. It's the last day of work for the summer. It's a little sad but also exciting to keep moving on. Have a good day today, I'll see you later for a fun dinner. Muah.<br><br>-Joey"
    },
    {
        "title": "August 9th",
        "date": "2025-8-9",
        "content": "Hi dear. Internship is officially done for the summer. I hope you had a good few months. I am so proud of everything you did and I know that you will keep up the good work. Love you dear. Muah.<br><br>-Joey"
    },
    {
        "title": "August 10th",
        "date": "2025-8-10",
        "content": "Hi lovey. I'm glad that we got everything moved and home for a little bit. Summer's about over but I am excited to get back to school. We're juniors now! I know we will be apart for a little bit and I miss you already, but I'll be back up in Lincoln before you know it. I love you honey. Have a good week for me :)<br><br>-Joey"
    },
    {
        "title": "August 11th",
        "date": "2025-8-11",
        "content": "Good morning dear. It's an exciting day! I hope that you are able to get all moved in today. Then we won't have to worry about moving anything for a while. I'll be gone today but you can focus on your stuff and I'll talk to you when you have time. Love you dear. I miss you but the week's going by fast! Muah.<br><br>-Joey"
    },
    {
        "title": "August 12th",
        "date": "2025-8-12",
        "content": "Hi honey. I'm glad you're all moved back in. I'll see you real soon. Have a good day for me, I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "August 13th",
        "date": "2025-8-13",
        "content": "Hello sweetie. It's Wednesday already, so I get to come up to Lincoln soon and see you and get all moved in. I'm really excited to see my beautiful girl and hang out and cuddle. Have a good day today, and I hope you're not too stressed about things like your classes. They will turn out okay, and I'll help with your final. I love you, dear. Muah.<br><br>-Joey"
    },
    {
        "title": "August 14th",
        "date": "2025-8-14",
        "content": "Hi darling. I'm sorry that you've been so busy this week. You're doing a great job with everything. I'm excited to see you in just a couple more days! I hope you can come see me and relax for a little bit. See you soon dear, I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "August 15th",
        "date": "2025-8-15",
        "content": "Hi baby. You have had a long busy week but it's almost all done. I hope that you can find some times to relax a little bit. I am really excited to some see you and be back at school with you. I think it's going to be a good year. I love you lots. Have a good day today. Muah.<br><br>-Joey"
    },
    {
        "title": "August 16th",
        "date": "2025-8-16",
        "content": "Good morning dear. I'm so excited to get to see you. Just one more day! Keep up all your important work honey. Just a little bit longer and then things will slow down a little bit. Let me know if I can do anything for you at all. I love you :) Muah.<br><br>-Joey"
    },
    {
        "title": "August 17th",
        "date": "2025-8-17",
        "content": "Hi honey. I am so excited to see you. I'm going to do everything I can to get my package so that I can come today and we can have a fun night. I miss you lots but no matter what I will see you really soon. I love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "August 18th",
        "date": "2025-8-18",
        "content": "Hello my love. I get to see you for real today hehe. I'm sorry about the dumb package not coming on time. I'm really excited to get all moved in and to see you and help you relax. You're my favorite person and I will see you soon. Love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "August 19th",
        "date": "2025-8-19",
        "content": "Hi baby. I was so happy to see you yesterday. I wish we could hang out some more but I know you're busy. When things slow down we will see each other more. I hope you get a good night of rest and have a good day today. I love you dear. Muah.<br><br>-Joey"
    },
    {
        "title": "August 20th",
        "date": "2025-8-20",
        "content": "Hi pumpkin. Just a few more real busy days left. I know that it's a lot for you but you're doing a great job. I can't wait to see you more later this week and maybe have a sleepover :) Have a good day and try to relax if you get a second for me. I love you.<br><br>-Joey"
    },
    {
        "title": "August 21st",
        "date": "2025-8-21",
        "content": "Good morning honey. The week is going by pretty fast. It's thursday already! Maybe I can see you tonight or tomorrow and we can hang out :) I can't wait. Love you lots dear. Muah.<br><br>-Joey"
    },
    {
        "title": "August 22nd",
        "date": "2025-8-22",
        "content": "Hi dear. Hopefully just one more long day left! Then maybe I can see you and we can just relax for a little bit all cozy in my room. I love you lots honey. I can't wait to see you soon. <3 <3 <3<br><br>-Joey"
    },
    {
        "title": "August 23rd",
        "date": "2025-8-23",
        "content": "Hi baby. It was so good to see you yesterday. One more big day left of your crazy week. Then school starts! Pretty crazy that it's here already. I hope you have a good semester of classes and everything. I love you lots dear. Have a good day. Muah.<br><br>-Joey"
    },
    {
        "title": "August 24th",
        "date": "2025-8-24",
        "content": "Hi honey. I'm really sorry you woke up feeling sicky :( I was happy to finally get our sleepover but I want you to try to keep resting up so you can feel better. I love you.<br><br>-Joey"
    },
    {
        "title": "August 25th",
        "date": "2025-8-25",
        "content": "Good morning love. Happy first day of class! I get to see you in our first one hehe. I hope you're feeling a little bit better. It makes me sad when you feel icky. Let me know if I can bring you anything today. I love you dear. Have a good day for me. XOXO<br><br>-Joey"
    },
    {
        "title": "August 26th",
        "date": "2025-8-26",
        "content": "Hi honey. I hope you're feeling a little better today. If we're both sick this week at least we're getting it out of the way... Please let me know if I can do anything for you. I can get you lunchy if runza or something sonuds good. Maybe I can stop by and see you later today. I don't have too much to do. Just need to keep studying for interviews. I love you lots. Please don't push yourself to do too much when you feel icky. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "August 27th",
        "date": "2025-8-27",
        "content": "Good morning dear. Try to keep taking it easy today. You will start feeling better soon, I'm sure. Try to have a good day today. Love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "August 28th",
        "date": "2025-8-28",
        "content": "Hi hon. Can you believe that August is almost over already? It feels like we never even left for summer break. I'm glad to have more time to hang out together, once you're feeling better. I'll see you later today and we can hang out and watch the game all cozy in my room. I love you dear. Muah.<br><br>-Joey"
    },
    {
        "title": "August 29th",
        "date": "2025-8-29",
        "content": "Hey honey. I had a fun night with you. We finally got a night to hang out together :) I'm happy that you are feeling better and better. I hope that makes things less stressfull for you this week. I'll see you later in class. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "August 30th",
        "date": "2025-8-30",
        "content": "Hi baby. We made it through the first week of school! Rest up today for me ok? This week will be better now that you're not so sicky. You're my best friend, and I'm excited for our day tomorrow. We will have a fun night. I love you dear. I'll see you later today. XOXO.<br><br>-Joey"
    },
    {
        "title": "August 31st",
        "date": "2025-8-31",
        "content": "Hi schmoopy. I love you and love spending time with you. I hope you have a good day today. Bye bye my beautiful girl. Muah.<br><br>-Joey"
    },
    {
        "title": "September 1st",
        "date": "2025-9-1",
        "content": "HAPPY TWO YEARS!!! I'm so excited for our big day. I love you lots honey. I will get to see you all day today (and give you your card hehe). See you soon. Muah.<br><br>-Joey"
    },
    {
        "title": "September 2nd",
        "date": "2025-9-2",
        "content": "Good morning honey. Back to another week. I hope your classes and everything go well. Don't worry too much about design studio. I promise you are going to find the best fit and you're doing a great job. I love you lots dear. Muah.<br><br>-Joey"
    },
    {
        "title": "September 3rd",
        "date": "2025-9-3",
        "content": "Hi lovey. We're going to have some busy days but I am sure I'll still get to see you almost every day. Soon we can have a hang out night with just us and play our game or whatever you want. Keep up your good work with everything. I hope you can be a little less worried once we learn our DS teams. I am sure you're going to get a good team. Love you dear. Have a good day today.<br><br>-Joey"
    },
    {
        "title": "September 4th",
        "date": "2025-9-4",
        "content": "Good morning honey. It's an exciting day. I'm sure we'll both get on good teams and then we'll be ready for a good semester. Have a good day for me and I hope I'll get to see you later :) Love you lots dear. XOXO<br><br>-Joey"
    },
    {
        "title": "September 5th",
        "date": "2025-9-5",
        "content": "Happy Friday my love. I'm really happy that our groups worked out! It might be a lot of work, but I think we're going to have some fun working on our projects. I'll see you later and we can hang out tonight hehe. Love you dear. Muah.<br><br>-Joey"
    },
    {
        "title": "September 8th",
        "date": "2025-9-8",
        "content": "Hi pumpkin. It's Monday, so back to school again. I'm glad we got to have another fun weekend together. I hope you have a good week for me. And if you ever need to talk I am here for you. Love you lots! Muah.<br><br>-Joey"
    },
    {
        "title": "September 9th",
        "date": "2025-9-9",
        "content": "Hi honey. I'm sorry you had a tough day yesterday. I was glad to see you for a little bit. I'm always here for you. I will see you later at lunch for sure. Then I have project later, but maybe I can see you for a little bit tonight. Spending time with you is my favorite part of the day :) Love you lots dear. Muah.<br><br>-Joey"
    },
    {
        "title": "September 10th",
        "date": "2025-9-10",
        "content": "Good morning dear. It looks like Mondays and Tuesdays will be my busy days this semester. I hope I can see you some more today or tomorrow. I want to snuggle in bed and play our game together :) Then on Friday we have a formal, which will be a fun night. I love you lots. I'll see you soon. Bye bye.<br><br>-Joey"
    },
    {
        "title": "September 11th",
        "date": "2025-9-11",
        "content": "Hi sweeetie. I'm glad you got to come and relax and play our game a little bit yesterday. You're doing a great job with all your responsibilities and I'm proud of you. I love you lots. Have a good day today. Biiig kiss. Muah.<br><br>-Joey"
    },
    {
        "title": "September 12th",
        "date": "2025-9-12",
        "content": "Happy Friday, my love. I'm excited to spend tonight together. We can go to the formal for a little bit and have dinner together. I hope you are having a good semester so far, even if some parts have been stressful. I love you lots, sweetie. I'll see you later in your pretty dress! Muah.<br><br>-Joey"
    },
    {
        "title": "September 13th",
        "date": "2025-9-13",
        "content": "Hi baby. I'm excited for our day today. I'm glad we're going to at least one game this year. Even though it's just silly football it will be fun to be with you and see your family. Then later is Sophie Joey naptime :) Love you lots honey. Muah.<br><br>-Joey"
    },
    {
        "title": "September 14th",
        "date": "2025-9-14",
        "content": "Hey hey honey. I love you always. Have a nice day today. Muah.<br><br>-Joey"
    },
    {
        "title": "September 15th",
        "date": "2025-9-15",
        "content": "Hello sweetie. There's nothing I like more than waking up and snuggling with my baby :) I hope you have a good Monday. Even if I don't get to see you much today. Love you lots dear. Muah.<br><br>-Joey"
    },
    {
        "title": "September 16th",
        "date": "2025-9-16",
        "content": "Good morning my sunshine. Let me know how you are feeling today. I really hope you feel a little bit better today than yesterday. It's our busy couple of days at the start of the week but maybe you will have some more time to relax soon. I'll see you soon dear. Love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "September 17th",
        "date": "2025-9-17",
        "content": "Hiya baby. I'm glad you made it through your busy day yesterday and that I got to hang out with you for a little bit. Good luck at your dinner today. Don't be scared honey, it's really exciting that you get to do that! You deserve it baby, let me know how it goes. Love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "September 18th",
        "date": "2025-9-18",
        "content": "Good morning, dearest. I hope you got a good night's rest! You were so sleepy yesterday. We haven't gotten too much hangout time so far this week but I'm excited for our formal tomorrow night :) I'll see you later at least for a little bit. I love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "September 19th",
        "date": "2025-9-19",
        "content": "Hi pumpkin. I'm excited for formal today! I'm also excited for fall and the nice weather and pretty leaves and pumpkin patch with you. I hope you are having a good start to the semester. You're doing a great job as always my dear. I'll see you later today. I love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "September 21st",
        "date": "2025-9-21",
        "content": "Good morning dear. I had a fun day with you yesterday :) We had our game day together and just got to relax. I will be busy most of today but we have lots more days together coming soon. Have a good day for me and I'll see you later for sure. I love you. XOXO.<br><br>-Joey"
    },
    {
        "title": "September 22nd",
        "date": "2025-9-22",
        "content": "Hi my love. We're definitely pretty busy right now, but I'm still getting to see you every day, which makes me really happy. I'm excited for our concert together tomorrow. That will be a lot of fun. I hope you have a good day today. Let me know if I can get you lunch or anything, I'm here for you. Love you lots sweetie! Muah.<br><br>-Joey"
    },
    {
        "title": "September 23rd",
        "date": "2025-9-23",
        "content": "Concert day! I think it's going to be a good day, dear. We get to go to the career fair for a little bit then go to concert :) I'll see you later today, but have a good morning of classes. Love you always honey. Muah!<br><br>-Joey"
    },
    {
        "title": "September 24th",
        "date": "2025-9-24",
        "content": "Good morning baby! I had a nice night with you at the concert :) I hope you had a good time. I will be pretty busy tomorrow with intterview and team time and homework, but maybe we can hang out a little bit. I love you lots. See you soon, muah.<br><br>-Joey"
    },
    {
        "title": "September 25th",
        "date": "2025-9-25",
        "content": "Hi honey. It's been a fast week but pretty blah. We've both been busy with everything going on. I hope that we can spend some more time together later this week. I miss you and love you lots. Have a good day today, and I hope I can see you for lunch. Bye bye. Muah.<br><br>-Joey"
    },
    {
        "title": "September 26th",
        "date": "2025-9-26",
        "content": "Happy Friday dear. I really hope your throat is okay. I know that everyone is getting sick but I don't want you to :( Thank you for bringing me things to make me feel better babby, you always take care of me. I'll see you a little today for sure and I love you. Have a good day for me. Muah.<br><br>-Joey"
    },
    {
        "title": "September 27th",
        "date": "2025-9-27",
        "content": "Hi baby. I'm glad to hear about Hudl. I think we are both going to have really safe backups so that we don't have to stress too much about next summer. I still believe in you getting a cool job somewhere out of Nebraska, though. You're doing such a great job with school and work and I'm proud of you. Hopefully I'll see you for at least a bit later today. Love you lots dear. Muah.<br><br>-Joey"
    },
    {
        "title": "September 28th",
        "date": "2025-9-28",
        "content": "Morning pumpkin. I hope you are feeling a little bit better today. We can spend the day doing some work and boring things. I want you to feel prepared for the week so you aren't too nervous about things. Let me know if I can help you with anything at all. I love you lots and I hope I can see you a little bit today. I need a big hug and cuddle :) Muah.<br><br>-Joey"
    },
    {
        "title": "September 29th",
        "date": "2025-9-29",
        "content": "Hey hey honey. It's our busy day again so we might not get to hang out but hopefully we're both feeling good and can get everything done that we need to. Good luck on everything you have today, I know you'll do great. I love you and I'll see you soon dear. Muah.<br><br>-Joey"
    },
    {
        "title": "September 30th",
        "date": "2025-9-30",
        "content": "Good morning my sunshine. I'm glad I got to see you last night and just hold you for a little. Best part of my day :) I can get you lunch today and we can keep locking in and working on things. I hope you have a good day today. I love you dear. I'll see you later. Muah.<br><br>-Joey"
    },
    {
        "title": "October 1st",
        "date": "2025-10-1",
        "content": "Happy 25 months honey!! I can't believe it's already October. The days are going by so quick. I'm excited for fall and pretty leaves and pumpkins and staying inside from the cool weather and snuggling. I know that you have been so busy but you will have a really fun trip this weekend and hopefully you can relax some. I love you lots dear. Big kiss, muah.<br><br>-Joey"
    },
    {
        "title": "October 2nd",
        "date": "2025-10-2",
        "content": "Good morning my love. I'm glad we got to have out last. I always with we could spend more time together but I know that we have both been busy. I'll see you later today and then you can go get ready for your exciting trip. I promise all of your classes and deadlines will turn out okay even if it doesn't feel like it in the moment. I'm here for you sweetie. I love you always. Muah.<br><br>-Joey"
    },
    {
        "title": "October 3rd",
        "date": "2025-10-3",
        "content": "Hi sweetie. Today's your big trip! I hope you have good flights and can try  to get some rest, I know you haven't been getting a lot of sleep. Have fun and let me know how you're doing when you get a chance. I'll see you again in no time and we can spend some time together and you can tell me all about Memphis. Love you lots dear. Muah.<br><br>-Joey"
    },
    {
        "title": "October 4th",
        "date": "2025-10-4",
        "content": "Good morning baby. I'm so happy that you had a good day yesterday! I know you will be busy but hopefully we can talk for a while later. I miss you lots. I'm just trying to get things done while I'm not busy, and maybe this week will be a little less stressful for us. I love you dear and I'll see you soon. Muah.<br><br>-Joey"
    },
    {
        "title": "October 5th",
        "date": "2025-10-5",
        "content": "Hi dear. I'm excited for you to get backhome today. I am really happy that you had a good time but I misss you :) I'm sorry you are feeling a little sick again. I hope you can get home and try to rest some and let me help take care of you. Be safe on your way home and I'll see you later for at least a second! I love you Sophia. Muah.<br><br>-Joey"
    },
    {
        "title": "October 6th",
        "date": "2025-10-6",
        "content": "Hi baby. I'm happy that you got home safe. I know you haven't been feeling very good but you did such a good job getting things done last week so I hope you can find some time to relax now. I get to see you today, but for real this time :) Drive safe back to Lincoln for me. I love you. Have a good day for me.<br><br>-Joey"
    },
    {
        "title": "October 7th",
        "date": "2025-10-7",
        "content": "Hello lovey. We finally got to see eachother yesterday and hang out a little. I just love snuggling with you in a nice warm bed when it's all chilly outside. It's the season for pumpkin patch and yummy treats and apple cider with Sophie. I will have a busy couple days, but once exams are done things will be less crazy for sure. I love you lots dear. Have a good day.<br><br>-Joey"
    },
    {
        "title": "October 8th",
        "date": "2025-10-8",
        "content": "Hi darling. One more day of business and tests for us. Then tomorrow we can hang out alll alone. Let me know if I can help with anything for the test later. I know that you're going to do a great job honey. You are my smart girl, ok? I'll see you tomorrow, I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "October 9th",
        "date": "2025-10-9",
        "content": "Good morning dear. The busy part of the week is over now and I'm excited to hang out with you later. Hopefully we can just relax and destress a little bit. I'll see you later, but have a good day for me. I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "October 10th",
        "date": "2025-10-10",
        "content": "Hi sweetie. I love you soooo much. And my favorite part of the day is when we get to snuggle together in my bed. Have a good day today for me ok. Muah.<br><br>-Joey"
    },
    {
        "title": "October 11th",
        "date": "2025-10-11",
        "content": "Hi pumpkin. I hope this will be a relaxing weekend for you! I will be a little bit busy with composites and things but I will see you whenever I can. Try to rest up for me, you have been working so hard. I love you dear, and I'll see you later. Muah!<br><br>-Joey"
    },
    {
        "title": "October 13th",
        "date": "2025-10-13",
        "content": "Good morning my dear. Back to another week! I can't wait to spend some time with you in the nice fall weather. I get to go to pumpkin patch with my pumpkin hehe. I'll try to see you later today for a little but I should focus on preparing for my interview on Tuesday. I'll see you soon honey. Love you lots. Muah.<br><br>-Joey"
    },
    {
        "title": "October 14th",
        "date": "2025-10-14",
        "content": "Hey dear. I know we have lots of big decisions and things going on right now and it can be stressful, but I know everything will turn out how it is supposed to. I'm just happy that I have you to cuddle up with in bed after our long days :) I have interview this morning so I'll probably be a little stressed, but I think it will hopefully go good. I'll let you know how it goes, and I'll see you later today. Love you hon. Muah.<br><br>-Joey"
    },
    {
        "title": "October 15th",
        "date": "2025-10-15",
        "content": "Happy Wednesday, honey. I'm glad that you have been working hard and figuring out some of the things that have been stressful for you. You're doing a great job with everything. I'm excited to spend time together tomorrow at the pumpkin patch, just like two years ago :)) Please have a nice day today, the days are flying by so fast. Love you always dear.<br><br>-Joey"
    },
    {
        "title": "October 16th",
        "date": "2025-10-16",
        "content": "It's pumpkin patch day! It looks like we will have a perfect fall day and I'm so excited to spend the night with you. I'll see you later my dear. Love you lots. Muah!<br><br>-Joey"
    },
    {
        "title": "October 18th",
        "date": "2025-10-18",
        "content": "Hi honey! I'm glad you're home safe and sound. I want you to just hang out and do whatever you want for a few days after you have been working so hard at school. I drive home this morning so I'll let you know when I get home and I'll say hi to everyone for you. Have a good day today for me, I miss u already and I love you. Muah.<br><br>-Joey"
    },
    {
        "title": "October 19th",
        "date": "2025-10-19",
        "content": "Morning, darling. We still have a couple of days left for break, but then we go back to Lincoln and hang out :) I'm already excited to see you again and hold you. Maybe later today we can play our game for a little bit. I don't want to distract you from hanging out and relaxing or seeing your friends, though. These couple days are for you to relax, so please try not to worry too much about school. That can wait until Wednesday at least. I love you lots, dear. Have a nice day!<br><br>-Joey"
    },
    {
        "title": "October 20th",
        "date": "2025-10-20",
        "content": "Hi sweetie. One day left at home, then we get to see each other! I hope you're having a good break. Soon we'll get back to the usual of getting things done of course. The time is really flying by though. I love you dear, have a good day for me. XOXO.<br><br>-Joey"
    }
]
"
}
